"""
JamesTrade ‚Äî –ì–ª–∞–≤–Ω—ã–π –∑–∞–ø—É—Å–∫–∞—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞
----------------------------------------
–≠—Ç–æ—Ç —Ñ–∞–π–ª –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç:
  ‚Ä¢ trading_core.py ‚Äî —Ç–æ—Ä–≥–æ–≤–æ–µ —è–¥—Ä–æ
  ‚Ä¢ tg_app.py ‚Äî Telegram-–±–æ—Ç
"""

import sys
import subprocess
import threading
import time
import os
import importlib

# === 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –∫–æ–Ω—Å–æ–ª–∏ ===
try:
    if hasattr(sys.stdout, 'reconfigure'):
        sys.stdout.reconfigure(encoding='utf-8')
except Exception:
    pass

print("[Main] ‚úÖ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

# === 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ===
REQUIRED_LIBS = [
    "requests",
    "pandas",
    "numpy",
    "python-dotenv",
    "telebot",
    "ta",
]

def install_missing():
    missing = []
    for lib in REQUIRED_LIBS:
        try:
            importlib.import_module(lib)
        except ImportError:
            missing.append(lib)
    if missing:
        print(f"[Main] ‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: {', '.join(missing)}")
        subprocess.check_call([sys.executable, "-m", "pip", "install", *missing])
    else:
        print("[Main] ‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

install_missing()

# === 3. –ó–∞–≥—Ä—É–∂–∞–µ–º .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ===
try:
    from dotenv import load_dotenv
    load_dotenv()
    print("[Main] ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (.env) –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
except Exception as e:
    print(f"[Main] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å .env: {e}")

# === 4. –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤ ===
def run_trading_core():
    while True:
        try:
            print("\n[Main] üî• –ó–∞–ø—É—Å–∫ trading_core.py ...")
            subprocess.run([sys.executable, "trading_core.py"], check=True)
        except subprocess.CalledProcessError as e:
            print(f"[Main] ‚ö†Ô∏è Trading core —É–ø–∞–ª: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫...")
            time.sleep(5)
        except Exception as e:
            print(f"[Main] ‚ùå –û—à–∏–±–∫–∞ trading_core: {e}")
            time.sleep(5)

def run_tg_app():
    while True:
        try:
            print("\n[Main] üí¨ –ó–∞–ø—É—Å–∫ tg_app.py ...")
            subprocess.run([sys.executable, "tg_app.py"], check=True)
        except subprocess.CalledProcessError as e:
            print(f"[Main] ‚ö†Ô∏è Telegram –±–æ—Ç —É–ø–∞–ª: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫...")
            time.sleep(5)
        except Exception as e:
            print(f"[Main] ‚ùå –û—à–∏–±–∫–∞ tg_app: {e}")
            time.sleep(5)

            def run_bot_process():
                while True:
                    try:
                        print("\n[Main] üî• –ó–∞–ø—É—Å–∫ bot.py ...")
                        subprocess.run([sys.executable, "bot.py"], check=True)
                    except subprocess.CalledProcessError as e:
                        print(f"[Main] ‚ö†Ô∏è Bot —É–ø–∞–ª: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫...")
                        time.sleep(5)
                    except Exception as e:
                        print(f"[Main] ‚ùå –û—à–∏–±–∫–∞ bot : {e}")
                        time.sleep(5)

            print(f"[Main] ‚ö†Ô∏è Trading core —É–ø–∞–ª: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫...")
            time.sleep(5)
        except Exception as e:
            print(f"[Main] ‚ùå –û—à–∏–±–∫–∞ trading_core: {e}")
            time.sleep(5)

# === 5. –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–æ–≤ ===
t1 = threading.Thread(target=run_trading_core, daemon=True)
t2 = threading.Thread(target=run_tg_app, daemon=True)

t1.start()
t2.start()

print("\n[Main] üöÄ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω! –†–∞–±–æ—Ç–∞—é—Ç –æ–±–∞ –º–æ–¥—É–ª—è (—Ç–æ—Ä–≥–æ–≤–ª—è + Telegram).")

# === 6. –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —É–¥–µ—Ä–∂–∞–Ω–∏—è ===
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    print("\n[Main] üì¥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä—É—á–Ω—É—é. –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...")
    sys.exit(0)
